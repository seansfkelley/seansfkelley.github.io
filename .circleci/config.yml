version: 2.1
orbs:
  ruby: circleci/ruby@1.0
jobs:
  build:
    docker:
      - image: cimg/ruby:3.0.1
    working_directory: ~/repo
    environment:
      - SOURCE_BRANCH: master
      - TARGET_BRANCH: gh-pages
      - DEPLOY_EMAIL: circleci-deploy-task@nope.nope
      - DEPLOY_NAME: CircleCI Deploy Task
    steps:
      - add_ssh_keys:
          fingerprints:
            - "3a:ae:ba:28:f0:06:37:11:15:42:31:d2:5e:f4:2a:69"
      - checkout
      - ruby/install-deps
      - run:
          name: Jekyll build
          command: bundle exec jekyll build
      - run:
          name: HTMLProofer
          command: bundle exec htmlproofer ./_site --check-html --disable-external --allow-hash-href
      - deploy:
          name: Commit to gh-pages
          command: |
            if [ "$CIRCLE_BRANCH" == "$SOURCE_BRANCH" ]; then
              git config --global user.email "$DEPLOY_EMAIL"
              git config --global user.name "$DEPLOY_NAME"

              # upsert an orphan branch
              git fetch origin "$TARGET_BRANCH" || true
              git checkout --force "$TARGET_BRANCH" || git checkout --orphan "$TARGET_BRANCH"

              # git will stage changes when creating orphan branches, so don't
              git reset

              # delete everything except .git (we need that) and _site (the compiled content)
              # note that `find -delete` does not work for our uses here
              find . -maxdepth 1 -not -name '_site' -not -name '.git' -not -name '.' -not -name '..' | xargs rm -rf

              # pull out the files we care about
              mv _site/* .
              rmdir _site

              # silence CircleCI complaining about a lack of configuration -- though the rules
              # elsewhere in this file prevent this branch from ever actually running the config
              git checkout "$CIRCLE_SHA1" -- .circleci
              # unstage any changes that we brought in so they appear in the diff checks below
              git reset

              # check if we have any changes to push
              # feed.xml changes timestamp every run, so ignore it -- if the feed changed
              # meaningfully, other files would appear in the diff too
              if [[ ! -z "$(git --no-pager diff --name-only | grep -v feed.xml)" ]]; then
                git add .
                git commit -q -m "Automated deployment to GitHub Pages: ${CIRCLE_SHA1}"
                git --no-pager show --stat
                git push origin "$TARGET_BRANCH"
              else
                echo "no non-feed.xml changes detected; not publishing another commit"
              fi
            else
              echo "skipping deploy: not on $SOURCE_BRANCH branch"
            fi


workflows:
  build:
    jobs:
      - build:
          filters:
            branches:
              ignore: gh-pages
